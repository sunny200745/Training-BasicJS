## HTML5 and CSS3

### Overview of HTML5 ==> Pinakin
- New in HTML5
	http://slides.html5rocks.com/#landing-slide
	http://pinakinmistry.github.io/presentations/javascriptpower/#/step-1

- HTML Skeleton:
	<html>
	  <head></head>
	  <body></body>
	</html>


- New DOCTYPE and Character Set
	HTML 4.01 Strict:
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">

	HTML 4.01 Transitional:
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

	HTML 4.01 Frameset:
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">

	XHTML 1.0 Strict:
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

	XHTML 1.0 Transitional:
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

	XHTML 1.0 Frameset:
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">

	XHTML 1.1:
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

	HTML5:
	<!DOCTYPE html>

	Charset:
	<head>
		<meta charset="UTF-8">
	</head>

- Semantic Markup
	<article>
	<aside>
	<details>
	<figcaption>
	<figure>
	<footer>
	<header>
	<main>
	<mark>
	<nav>
	<section>
	<summary>
	<time>
	http://www.w3schools.com/html/html5_semantic_elements.asp

- Simplifying Selection using the Selectors API
	document.getElementById('id')
	document.getElementsByName('name')
	document.getElementsByTagName('tag')

	vs

	document.querySelector('selectors')
	document.querySelectorAll('selectors')

- JavaScript Logging and Debugging
	console.log()
	console.info()
	console.warn()
	console.error()
	console.dir()
	console.table()
	
	console.assert()
	console.group() & console.groupEnd() with nesting and console.groupCollapsed()
	console.log("%s has %d points", "Sam", "100");
	%s	Formats the value as a string.
	%d or %i	Formats the value as an integer.
	%f	Formats the object as a floating point value.
	%o	Formats the value as an expandable DOM element (as in the Elements panel).
	%O	Formats the value as an expandable JavaScript object.
	%c	Applies CSS style rules to output string specified by the second parameter.

	console.log("%cThis will be formatted with large, blue text", "color: blue; font-size: x-large");

	console.time("Array initialize");var array= new Array(1000000);for (var i = array.length - 1; i >= 0; i--) {    array[i] = new Object();};console.timeEnd("Array initialize");


	function AddResult(name, result) {  console.timeStamp("Adding result");  var text = name + ': ' + result;  var results = document.getElementById("results");  results.innerHTML += (text + "<br>");}

	brightness : function() {    debugger;    var r = Math.floor(this.red*255);    var g = Math.floor(this.green*255);    var b = Math.floor(this.blue*255);    return (r * 77 + g * 150 + b * 29) >> 8;}

	https://developer.chrome.com/devtools/docs/console


- Window.JSON


### Using HTML5 Today ==> Pinakin
- Currently available features
	http://caniuse.com/

- Browser Support

- Detective native availability of features

- Working with emulation

### Understanding HTML5 Markup ==> Pinakin
- HTML5 Page Structure

- HTML5 DOCTYPE

- HTML5 markup structural elements

- Semantic elements


### HTML5 Canvas & SVG ==> Pinakin
- Overview of Canvas Vs. SVG
- Canvas coordinates
- Context
- Pixel Data
- Working with Canvas APIs
- Drawing Operations
- Canvas Transforms
- Understanding and Working with SVG


### CSS 3.0 ==> Pinakin
- Introducing CSS3
- CSS3 Colors, Gradients and Multiple Backgrounds
- Rounded Corners and Border-Radius
- CSS3 Transforms
- Transitions
- Animations & 2D Transformations
- Web Fonts with @font-face
- CSS3 Multicolumn Layouts
